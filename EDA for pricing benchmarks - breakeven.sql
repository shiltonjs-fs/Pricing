-- Breakeven with segments
WITH BASE AS (
    SELECT
        t1.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID,
        t1.CARDUP_PAYMENT_NET_REVENUE_USD_AMT,
        DATE(t1.CARDUP_PAYMENT_CREATED_AT_LCL_TS) AS TRANSACTION_DATE,
        DATE_TRUNC('month', t1.CARDUP_PAYMENT_CREATED_AT_LCL_TS) AS MONTH_TRANSACTED,
        t1.DWH_CARDUP_PAYMENT_ID,
        
        CASE
            WHEN t1.CARDUP_PAYMENT_USD_AMT < 50000 THEN '01. 0-50k'
            WHEN t1.CARDUP_PAYMENT_USD_AMT < 100000 THEN '02. 50-100k'
            WHEN t1.CARDUP_PAYMENT_USD_AMT < 150000 THEN '03. 100-150k'
            WHEN t1.CARDUP_PAYMENT_USD_AMT < 200000 THEN '04. 150-200k'
            ELSE '05. 200k+'
        END AS USD_AMT_BAND,
        
        CASE
            WHEN t1.CARDUP_PAYMENT_NEXT_DAY_FEE > 0 THEN 'Next Day'
            ELSE 'Standard'
        END AS NEXT_DAY,
        
        t1.CARDUP_PAYMENT_CARD_TYPE,
        
        CASE
            WHEN t1.CARDUP_PAYMENT_PROMO_CODE IS NOT NULL THEN 'Promo Code'
            ELSE 'No Promo Code'
        END AS PROMO_CODE,
        

    FROM
        ADM.TRANSACTION.CARDUP_PAYMENT_DENORM_T t1
    WHERE
        t1.CARDUP_PAYMENT_STATUS NOT IN ('Payment Failed', 'Cancelled', 'Refunded', 'Refunding')
        AND t1.CARDUP_PAYMENT_USER_TYPE = 'business'
        AND LOWER(t1.CARDUP_PAYMENT_PRODUCT_NAME) LIKE '%make%'
        AND t1.CARDUP_PAYMENT_CU_LOCALE_ID = 1
        AND t1.CARDUP_PAYMENT_CARD_TYPE IN ('Visa', 'Mastercard')
),
FIRST_TX AS (
    SELECT
        CARDUP_PAYMENT_CUSTOMER_COMPANY_ID,
        MIN(TRANSACTION_DATE) AS FIRST_TRANSACTION_DATE
    FROM BASE
    GROUP BY CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
),
CUMULATIVE AS (
    SELECT
        B.*,
        FT.FIRST_TRANSACTION_DATE,
        SUM(B.CARDUP_PAYMENT_NET_REVENUE_USD_AMT) OVER (
            PARTITION BY B.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
            ORDER BY B.TRANSACTION_DATE
            ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
        ) AS CUM_NET_REVENUE,
        ROW_NUMBER() OVER (
            PARTITION BY B.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
            ORDER BY B.TRANSACTION_DATE
        ) AS TX_NUMBER
    FROM BASE B
    JOIN FIRST_TX FT
        ON B.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID = FT.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
),
FIRST_POSITIVE AS (
    SELECT *
    FROM (
        SELECT *,
            ROW_NUMBER() OVER (
                PARTITION BY CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
                ORDER BY TRANSACTION_DATE
            ) AS ROW_NUM
        FROM CUMULATIVE
        WHERE CUM_NET_REVENUE > 0
    ) POS
    WHERE ROW_NUM = 1
)
SELECT
    USD_AMT_BAND,
    NEXT_DAY,
    CARDUP_PAYMENT_CARD_TYPE,
    PROMO_CODE,
    COUNT(DISTINCT CARDUP_PAYMENT_CUSTOMER_COMPANY_ID) AS TOTAL_COMPANIES,
    APPROX_PERCENTILE(MONTHS_TO_PROFITABLE, 0.25) AS Q1_MONTHS_TO_PROFIT,
    APPROX_PERCENTILE(MONTHS_TO_PROFITABLE, 0.5) AS Q2_MONTHS_TO_PROFIT,
    APPROX_PERCENTILE(MONTHS_TO_PROFITABLE, 0.75) AS Q3_MONTHS_TO_PROFIT,
    AVG(MONTHS_TO_PROFITABLE) AS AVG_MONTHS_TO_PROFIT,
    APPROX_PERCENTILE(TX_COUNT_TO_PROFITABLE, 0.25) AS Q1_TXS_TO_PROFIT,
    APPROX_PERCENTILE(TX_COUNT_TO_PROFITABLE, 0.5) AS Q2_TXS_TO_PROFIT,
    APPROX_PERCENTILE(TX_COUNT_TO_PROFITABLE, 0.75) AS Q3_TXS_TO_PROFIT,
    AVG(TX_COUNT_TO_PROFITABLE) AS AVG_TXS_TO_PROFIT
FROM (
    SELECT
        *,
        DATEDIFF('month', FIRST_TRANSACTION_DATE, TRANSACTION_DATE) AS MONTHS_TO_PROFITABLE,
        TX_NUMBER AS TX_COUNT_TO_PROFITABLE
    FROM FIRST_POSITIVE
)
GROUP BY
    USD_AMT_BAND,
    NEXT_DAY,
    CARDUP_PAYMENT_CARD_TYPE,
    PROMO_CODE;