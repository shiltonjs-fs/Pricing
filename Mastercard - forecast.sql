-- This query calculates the total take rate for customers who used promocode for their  Mastercard rent transactions
with
    FILTER_CUSTOMER_MC_RENT as (
        SELECT distinct
            CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
        FROM
            ADM.TRANSACTION.CARDUP_PAYMENT_DENORM_T
        WHERE
            CARDUP_PAYMENT_STATUS NOT IN ('Payment Failed', 'Cancelled', 'Refunded', 'Refunding')
            AND CARDUP_PAYMENT_USER_TYPE = 'business'
            AND CARDUP_PAYMENT_CU_LOCALE_ID = 1
            AND LOWER(CARDUP_PAYMENT_PRODUCT_NAME) LIKE '%make%'
            and DATE(DATE_TRUNC('month', CARDUP_PAYMENT_CREATED_AT_LCL_TS)) >= DATE('2020-01-01')
            and DATE(DATE_TRUNC('month', CARDUP_PAYMENT_CREATED_AT_LCL_TS)) <= DATE('2025-04-01')
            and CARDUP_PAYMENT_PROMO_CODE LIKE '%SAVERENT%'
            --and CARDUP_PAYMENT_CARD_TYPE = 'Mastercard'
    )
select
    CARDUP_PAYMENT_CUSTOMER_COMPANY_ID,
    CARDUP_PAYMENT_CARD_TYPE,
    DATE(DATE_TRUNC('month', CARDUP_PAYMENT_CREATED_AT_LCL_TS)) as MONTH_TRANSACTED,
    case
        when CARDUP_PAYMENT_SALES_OWNER LIKE '%jon%'
        or CARDUP_PAYMENT_SALES_OWNER LIKE '%xavier%'
        or CARDUP_PAYMENT_SALES_OWNER LIKE '%terence%'
        or CARDUP_PAYMENT_SALES_OWNER LIKE '%leia%' then 'Managed'
        else 'Unmanaged'
    end as SALES_OWNER,
    SUM(CARDUP_PAYMENT_NET_REVENUE_USD_AMT) / SUM(CARDUP_PAYMENT_USD_AMT) as TAKE_RATE,
    SUM(
        case
            when CARDUP_PAYMENT_PROMO_CODE LIKE '%SAVERENT%'
            and CARDUP_PAYMENT_CARD_TYPE = 'Mastercard' then CARDUP_PAYMENT_NET_REVENUE_USD_AMT
            else null
        end
    ) / SUM(
        case
            when CARDUP_PAYMENT_PROMO_CODE LIKE '%SAVERENT%'
            and CARDUP_PAYMENT_CARD_TYPE = 'Mastercard' then CARDUP_PAYMENT_USD_AMT
            else null
        end
    ) as TAKE_RATE_MC_RENT,
    SUM(CARDUP_PAYMENT_NET_REVENUE_USD_AMT) as NET_REVENUE,
    SUM(
        case
            when CARDUP_PAYMENT_PROMO_CODE LIKE '%SAVERENT%'
            and CARDUP_PAYMENT_CARD_TYPE = 'Mastercard' then CARDUP_PAYMENT_NET_REVENUE_USD_AMT
            else null
        end
    ) as NET_REVENUE_MC_RENT,
    AVG(CARDUP_PAYMENT_USD_AMT) as AVG_GTV,
    COUNT(DWH_CARDUP_PAYMENT_ID) as NUM_TRANSACTIONS,
    COUNT(
        case
            when CARDUP_PAYMENT_PROMO_CODE LIKE '%SAVERENT%'
            and CARDUP_PAYMENT_CARD_TYPE = 'Mastercard' then DWH_CARDUP_PAYMENT_ID
            else null
        end
    ) as NUM_TRANSACTIONS_MC_RENT,
from
    ADM.TRANSACTION.CARDUP_PAYMENT_DENORM_T
    join FILTER_CUSTOMER_MC_RENT using (CARDUP_PAYMENT_CUSTOMER_COMPANY_ID)
WHERE
    CARDUP_PAYMENT_STATUS NOT IN ('Payment Failed', 'Cancelled', 'Refunded', 'Refunding')
    AND CARDUP_PAYMENT_USER_TYPE = 'business'
    AND CARDUP_PAYMENT_CU_LOCALE_ID = 1
    AND LOWER(CARDUP_PAYMENT_PRODUCT_NAME) LIKE '%make%'
    and DATE(DATE_TRUNC('month', CARDUP_PAYMENT_CREATED_AT_LCL_TS)) >= DATE('2020-01-01')
    and DATE(DATE_TRUNC('month', CARDUP_PAYMENT_CREATED_AT_LCL_TS)) <= DATE('2025-04-01')
group by
    1,
    2,
    3,
    4;

--First txn date 2024

-- This query calculates the total take rate for customers who used promocode for their Mastercard rent transactions,
-- but only for customers whose first transaction occurred in 2024.

WITH PROMO_MC_USERS AS (
    SELECT DISTINCT CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
    FROM ADM.TRANSACTION.CARDUP_PAYMENT_DENORM_T
    WHERE 
        CARDUP_PAYMENT_PROMO_CODE LIKE '%SAVERENT%'
        AND CARDUP_PAYMENT_CARD_TYPE = 'Mastercard'
        AND CARDUP_PAYMENT_STATUS NOT IN ('Payment Failed', 'Cancelled', 'Refunded', 'Refunding')
),
FIRST_LAST_TXN AS (
    SELECT
        CARDUP_PAYMENT_CUSTOMER_COMPANY_ID,
        MIN(CARDUP_PAYMENT_CREATED_AT_LCL_TS) AS FIRST_TXN_TS,
        MAX(CARDUP_PAYMENT_CREATED_AT_LCL_TS) AS LAST_TXN_TS
    FROM ADM.TRANSACTION.CARDUP_PAYMENT_DENORM_T
    WHERE 
        CARDUP_PAYMENT_STATUS NOT IN ('Payment Failed', 'Cancelled', 'Refunded', 'Refunding')
        AND CARDUP_PAYMENT_CUSTOMER_COMPANY_ID IN (SELECT * FROM PROMO_MC_USERS)
    GROUP BY CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
),
FIRST_TXN_DETAIL AS (
    SELECT
        t.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID,
        DATE(t.CARDUP_PAYMENT_CREATED_AT_LCL_TS) AS JOIN_DATE,
        CASE 
            WHEN t.CARDUP_PAYMENT_PROMO_CODE LIKE '%SAVERENT%' 
                 AND t.CARDUP_PAYMENT_CARD_TYPE = 'Mastercard' THEN TRUE
            ELSE FALSE
        END AS FIRST_TXN_IS_PROMO_MC
    FROM ADM.TRANSACTION.CARDUP_PAYMENT_DENORM_T t
    JOIN FIRST_LAST_TXN f
      ON t.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID = f.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
     AND t.CARDUP_PAYMENT_CREATED_AT_LCL_TS = f.FIRST_TXN_TS
    WHERE 
        t.CARDUP_PAYMENT_STATUS NOT IN ('Payment Failed', 'Cancelled', 'Refunded', 'Refunding')
),
CUSTOMER_REVENUE AS (
    SELECT
        CARDUP_PAYMENT_CUSTOMER_COMPANY_ID,
        SUM(CARDUP_PAYMENT_NET_REVENUE_USD_AMT) AS TOTAL_NET_REVENUE,
        SUM(CARDUP_PAYMENT_USD_AMT) AS TOTAL_GTV,
        SUM(CASE 
            WHEN DATE(CARDUP_PAYMENT_CREATED_AT_LCL_TS) BETWEEN DATE('2025-01-01') AND DATE('2025-12-31') 
            THEN CARDUP_PAYMENT_NET_REVENUE_USD_AMT 
            ELSE 0 
        END) AS TOTAL_NET_REVENUE_2025,
        SUM(CASE 
            WHEN DATE(CARDUP_PAYMENT_CREATED_AT_LCL_TS) BETWEEN DATE('2024-01-01') AND DATE('2024-12-31') 
            THEN CARDUP_PAYMENT_NET_REVENUE_USD_AMT 
            ELSE 0 
        END) AS TOTAL_NET_REVENUE_2024
    FROM ADM.TRANSACTION.CARDUP_PAYMENT_DENORM_T
    WHERE 
        CARDUP_PAYMENT_STATUS NOT IN ('Payment Failed', 'Cancelled', 'Refunded', 'Refunding')
        AND CARDUP_PAYMENT_CUSTOMER_COMPANY_ID IN (SELECT * FROM PROMO_MC_USERS)
    GROUP BY CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
)
SELECT distinct
    d.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID,
    d.JOIN_DATE,
    d.FIRST_TXN_IS_PROMO_MC,
    r.TOTAL_NET_REVENUE,
    r.TOTAL_NET_REVENUE_2024,
    r.TOTAL_NET_REVENUE_2025,
    r.TOTAL_NET_REVENUE / NULLIF(r.TOTAL_GTV, 0) AS TAKE_RATE,
    Datediff('month', DATE(f.FIRST_TXN_TS), DATE(f.LAST_TXN_TS)) + 1 AS TENURE_MONTHS
FROM FIRST_TXN_DETAIL d
JOIN CUSTOMER_REVENUE r
  ON d.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID = r.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
JOIN FIRST_LAST_TXN f
  ON d.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID = f.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
ORDER BY d.JOIN_DATE;

--not onboarded in 2025, active in 2025, with netrev and tenure
WITH PROMO_MC_USERS AS (
    SELECT
        CARDUP_PAYMENT_CUSTOMER_COMPANY_ID,
        MIN(CARDUP_PAYMENT_CREATED_AT_LCL_TS) AS FIRST_TRANSACTION_DATE
    FROM
        ADM.TRANSACTION.CARDUP_PAYMENT_DENORM_T
    WHERE
        CARDUP_PAYMENT_PROMO_CODE LIKE '%SAVERENT%'
        AND CARDUP_PAYMENT_CARD_TYPE = 'Mastercard'
        AND CARDUP_PAYMENT_STATUS NOT IN ('Payment Failed', 'Cancelled', 'Refunded', 'Refunding')
    GROUP BY
        CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
),

ALL_TRANSACTIONS AS (
    SELECT
        CARDUP_PAYMENT_CUSTOMER_COMPANY_ID,
        CARDUP_PAYMENT_CREATED_AT_LCL_TS,
        CARDUP_PAYMENT_NET_REVENUE_USD_AMT
    FROM
        ADM.TRANSACTION.CARDUP_PAYMENT_DENORM_T
    WHERE
        CARDUP_PAYMENT_STATUS NOT IN ('Payment Failed', 'Cancelled', 'Refunded', 'Refunding')
),

ACTIVE_2025_USERS AS (
    SELECT DISTINCT CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
    FROM ALL_TRANSACTIONS
    WHERE EXTRACT(YEAR FROM CARDUP_PAYMENT_CREATED_AT_LCL_TS) = 2025
)

SELECT
    u.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID,
    u.FIRST_TRANSACTION_DATE,
    MIN(t.CARDUP_PAYMENT_CREATED_AT_LCL_TS) AS FIRST_TX_DATE,
    MAX(t.CARDUP_PAYMENT_CREATED_AT_LCL_TS) AS LAST_TX_DATE,
    SUM(t.CARDUP_PAYMENT_NET_REVENUE_USD_AMT) AS TOTAL_NET_REVENUE,
    DATEDIFF('month', 
        DATE_TRUNC('month', MIN(t.CARDUP_PAYMENT_CREATED_AT_LCL_TS)),
        DATE_TRUNC('month', MAX(t.CARDUP_PAYMENT_CREATED_AT_LCL_TS))
    ) + 1 AS ACTIVE_MONTHS,
    ROUND(
        SUM(t.CARDUP_PAYMENT_NET_REVENUE_USD_AMT) /
        (DATEDIFF('month',
            DATE_TRUNC('month', MIN(t.CARDUP_PAYMENT_CREATED_AT_LCL_TS)),
            DATE_TRUNC('month', MAX(t.CARDUP_PAYMENT_CREATED_AT_LCL_TS))
        ) + 1),
        2
    ) AS AVG_NET_REVENUE_PER_ACTIVE_MONTH
FROM
    PROMO_MC_USERS u
JOIN
    ALL_TRANSACTIONS t
    ON u.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID = t.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
JOIN
    ACTIVE_2025_USERS a
    ON u.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID = a.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID
WHERE
    EXTRACT(YEAR FROM u.FIRST_TRANSACTION_DATE) < 2025
GROUP BY
    u.CARDUP_PAYMENT_CUSTOMER_COMPANY_ID,
    u.FIRST_TRANSACTION_DATE
ORDER BY
    AVG_NET_REVENUE_PER_ACTIVE_MONTH DESC;
